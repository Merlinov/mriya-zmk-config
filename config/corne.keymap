/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE   0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

&lt { quick_tap_ms = <220>; };

&mt { quick_tap_ms = <220>; };

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };

        cprght: cprght {
            label = "ZM_cprght";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N6 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        degree: degree {
            label = "ZM_degree";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        quote: quote {
            label = "ZM_quote";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N3 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        euro: euro {
            label = "ZM_euro";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N2 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        numcomma: numcomma {
            label = "ZM_numcomma";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N4>,
                <&macro_release>,
                <&kp LALT>;
        };

        lguillement: lguillement {
            label = "ZM_lguillement";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N7 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        rguillement: rguillement {
            label = "ZM_rguillement";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N8 &kp KP_N7>,
                <&macro_release>,
                <&kp LALT>;
        };

        lbracket: lbracket {
            label = "ZM_lbracket";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N1 &kp KP_N2 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        rbracket: rbracket {
            label = "ZM_rbracket";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N1 &kp KP_N2 &kp KP_N5>,
                <&macro_release>,
                <&kp LALT>;
        };

        colon: colon {
            label = "ZM_colon";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N5 &kp KP_N8>,
                <&macro_release>,
                <&kp LALT>;
        };

        semicolon: semicolon {
            label = "ZM_semicolon";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N5 &kp KP_N9>,
                <&macro_release>,
                <&kp LALT>;
        };

        question: question {
            label = "ZM_question";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        lsqbracket: lsqbracket {
            label = "ZM_lsqbracket";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };

        rsqbracket: rsqbracket {
            label = "ZM_rsqbracket";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N9 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };

        lang: lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_WIN>;

            label = "LANG";
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        insert {
            bindings = <&kp INSERT>;
            key-positions = <28 29>;
        };

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <26 28>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <32 33>;
        };

        enter {
            bindings = <&kp KP_ENTER>;
            key-positions = <8 9>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <4 3>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <2 3>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <31 32>;
        };

        lang {
            bindings = <&lang>;
            key-positions = <26 27>;
        };

        printscreen {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <10 9>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┌────────────────────────────────────────────┐

            label = "BASE";

            // └────────────────────────────────────────────┘
            /*
┌───────┬───────┬───────┬───────┬───────┬───────┐                   ┌───────┬───────┬───────┬───────┬───────┬───────┐
│ LGUI/]│   Q   │   W   │   E   │   R   │   T   │                   │   Y   │   U   │   I   │   O   │   P   │RGUI/[ │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤                      
│ CTRL/`│   A   │   S   │   D   │   F   │   G   │                   │   H   │   J   │   K   │   L   │   ;   │RCTRL/'│
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤
│ LALT/\│   Z   │   X   │   C   │   V   │   B   │                   │   N   │   M   │   ,   │   .   │   /   │RALT/- │
└───────┴───────┴───────┴───────┼───────┼───────┼───────┐   ┌───────┼───────┼───────┼───────┴───────┴───────┴───────┘
                                │ RAISE │ SPACE │ LOWER │   │ LOWER │  BKSP │ RAISE │
                                └───────┴───────┴───────┘   └───────┴───────┴───────┘   
*/

            bindings = <
&kp RBKT       &kp Q           &kp W           &kp E        &kp R                 &kp T    &kp Y  &kp U              &kp I        &kp O            &kp P                    &mt RGUI LBKT
&kp GRAVE      &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LCTRL D  &mt LS(LEFT_SHIFT) F  &kp G    &kp H  &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_ALT L  &mt RIGHT_WIN SEMICOLON  &kp SQT
&mt LALT BSLH  &kp Z           &kp X           &kp C        &kp V                 &kp B    &kp N  &kp M              &kp COMMA    &kp DOT          &kp FSLH                 &mt RALT MINUS
                                               &lt 2 TAB    &mo 1                 &mo 1    &mo 2  &mo 3              &lt 2 DEL
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        num_layer {
            // ┌────────────────────────────────────────────┐

            label = "num";

            // └────────────────────────────────────────────┘
            /*
┌───────┬───────┬───────┬───────┬───────┬───────┐                   ┌───────┬───────┬───────┬───────┬───────┬───────┐
│ CAPS  │  F10  │  F9   │  F8   │  F7   │   ~   │                   │   !   │   @   │   #   │   $   │   %   │ RGUI  │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤                      
│ CTRL  │  F11  │  F3   │  F2   │  F1   │ MENU  │                   │   :   │   ?   │   *   │   (   │   )   │   &   │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤
│ LALT  │  F12  │  F6   │  F5   │  F4   │ LANG  │                   │   "   │   «   │   »   │   {   │   }   │   ^   │
└───────┴───────┴───────┴───────┼───────┼───────┼───────┐   ┌───────┼───────┼───────┼───────┴───────┴───────┴───────┘
                                │  ADJ  │ LSHFT │   ▼   │   │   ▼   │ RSHFT │  ADJ  │
                                └───────┴───────┴───────┘   └───────┴───────┴───────┘   
*/

            bindings = <
&none  &kp LCTRL       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ESCAPE       &kp PLUS         &kp KP_NUMBER_9      &kp KP_N8     &kp KP_N7        &kp PERCENT  &kp RGUI
&none  &kp LEFT_SHIFT  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0     &kp KP_NUMBER_0  &kp LS(KP_NUMBER_4)  &kp KP_N5     &kp KP_NUMBER_6  &kp RPAR     &kp AMPS
&none  &kp LEFT_ALT    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LG(SPACE)    &kp MINUS        &lguillement         &rguillement  &lbracket        &rbracket    &kp CARET
                                     &kp TAB       &none         &trans           &trans           &mt RSHFT BSPC       &lt 3 DEL
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄		

        nav_layer {
            // ┌────────────────────────────────────────────┐

            label = "nav";

            // └────────────────────────────────────────────┘
            /*
┌───────┬───────┬───────┬───────┬───────┬───────┐                   ┌───────┬───────┬───────┬───────┬───────┬───────┐
│ BKSP  │   *   │   9   │   8   │   7   │   +   │                   │ NEXT  │ HOME  │ PSCRN │ PGUP  │ VOLU  │ RGUI  │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤                      
│ CTRL  │   /   │   3   │   2   │   1   │   0   │                   │ PLAY  │   ←   │   ↑   │   →   │ VOLD  │ CTRL  │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤
│ ALT/= │   .   │   6   │   5   │   4   │   -   │                   │ PREV  │  END  │   ↓   │ PGDN  │ MUTE  │ RALT  │
└───────┴───────┴───────┴───────┼───────┼───────┼───────┐   ┌───────┼───────┼───────┼───────┴───────┴───────┴───────┘
                                │   ▲   │ LSHFT │  ADJ  │   │  ADJ  │ RSHFT │   ▲   │
                                └───────┴───────┴───────┘   └───────┴───────┴───────┘  
*/

            bindings = <
&kp BSPC            &kp KP_MULTIPLY  &kp KP_N9  &kp KP_N8  &kp KP_N7        &kp PLUS     &kp C_NEXT  &kp HOME        &kp UP_ARROW    &kp PG_UP  &kp C_VOL_UP  &kp LEFT_GUI
&mt LCTRL KP_ENTER  &kp KP_SLASH     &kp KP_N3  &kp KP_N2  &kp KP_N1        &kp KP_N0    &kp C_PLAY  &kp LEFT        &kp UP          &kp RIGHT  &kp C_VOL_DN  &kp RCTRL
&mt LALT EQUAL      &numdot          &kp KP_N6  &kp KP_N5  &kp KP_N4        &kp MINUS    &kp C_PREV  &kp END         &kp SCROLLLOCK  &kp PG_DN  &kp C_MUTE    &kp LEFT_ALT
                                                &trans     &mt LSHFT SPACE  &lt 3 ESC    &lt 3 RET   &mt RSHFT BSPC  &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        adjust_layer {
            // ┌────────────────────────────────────────────┐

            label = "ADJUST";

            // └────────────────────────────────────────────┘
            /*
┌───────┬───────┬───────┬───────┬───────┬───────┐                   ┌───────┬───────┬───────┬───────┬───────┬───────┐
│ BLDR  │       │       │       │       │BT NEXT│                   │BT NEXT│   ₽   │   €   │       │       │  BLDR │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤                      
│ BTCLR │  BT0  │  BT1  │  BT2  │  BT3  │  BT4  │                   │  BT4  │  BT3  │  BT2  │  BT1  │  BT0  │ BTCLR │
├───────┼───────┼───────┼───────┼───────┼───────┤                   ├───────┼───────┼───────┼───────┼───────┼───────┤
│ CAPS  │ NUMLK │  INS  │ SLCK  │ PAUSE │BT PREV│                   │BT PREV│ PAUSE │ SLCK  │  INS  │ NUMLK │ CAPS  │
└───────┴───────┴───────┴───────┼───────┼───────┼───────┐   ┌───────┼───────┼───────┼───────┴───────┴───────┴───────┘
                                │   ▲   │ POWER │   ▼   │   │   ▼   │ POWER │   ▲   │
                                └───────┴───────┴───────┘   └───────┴───────┴───────┘
*/

            bindings = <
&bootloader  &none         &none         &none         &bt BT_PRV       &bt BT_NXT      &bt BT_NXT    &kp RA(N8)       &euro         &cprght       &degree       &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3     &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&kp CAPS     &kp KP_NUM    &kp INS       &kp SLCK      &kp PAUSE_BREAK  &bt BT_PRV      &bt BT_PRV    &kp PAUSE_BREAK  &kp SLCK      &kp INS       &kp KP_NUM    &kp CAPS
                                         &trans        &soft_off        &trans          &trans        &soft_off        &trans
            >;
        };
    };
};
